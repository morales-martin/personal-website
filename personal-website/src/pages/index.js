import Head from "next/head";
import { useEffect, useRef } from "react";
import { Inter } from "@next/font/google";
import { gsap } from "gsap";
import ScrollTrigger from "gsap/dist/ScrollTrigger";
import ScrollToPlugin from "gsap/dist/ScrollToPlugin";

import styles from "@/styles/Home.module.css";

import Landing from "./components/Landing";
import Summary from "./components/Summary";
import Projects from "./components/Projects";
import Contact from "./components/Contact";
import Header from "./components/Header";
import Footer from "./components/Footer";
import Navbar from "./components/Navbar";

const inter = Inter({ subsets: ["latin"] });

export default function Home() {
  const container = useRef(null);
  gsap.registerPlugin(ScrollToPlugin, ScrollTrigger);

  useEffect(() => {
    const ctx = gsap.context(() => {
      let sections = gsap.utils.toArray(".panel");

      let horizontalScroll = gsap.to(sections, {
        xPercent: -100 * (sections.length - 1),
        ease: "none",
        scrollTrigger: {
          trigger: container.current,
          pin: true,
          scrub: 1,
          // snap: 1 / (sections.length - 1),
          end: () => "+=" + container.current.offsetWidth,
        },
      });

      /* Navlink event listeners */
      document.querySelectorAll(".navLink").forEach((anchor) => {
        anchor.addEventListener("click", function (e) {
          e.preventDefault();
          let targetElem = document.querySelector(
              e.target.getAttribute("href")
            ),
            y = targetElem;
          if (
            targetElem &&
            container.current.isSameNode(targetElem.parentElement)
          ) {
            let totalScroll =
                horizontalScroll.scrollTrigger.end -
                horizontalScroll.scrollTrigger.start,
              totalMovement = (sections.length - 1) * targetElem.offsetWidth;
            y = Math.round(
              horizontalScroll.scrollTrigger.start +
                (targetElem.offsetLeft / totalMovement) * totalScroll
            );
          }
          gsap.to(window, {
            scrollTo: {
              y: y,
              autoKill: false,
            },
            duration: 1,
          });
        });
      });
    }, container.current); // <- Scope!

    return () => ctx.revert();
  }, []);

  const navLinkHandler = (e) => {
    e.preventDefault();
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={`container ${styles.container}`} ref={container}>
          <Header />
          <Navbar clickHandler={navLinkHandler} />
          <Landing className={`panel ${styles.landing}`} />
          <Summary className={`panel ${styles.summary}`} />
          <Contact className={`panel ${styles.contact}`} />
          <Projects className={`panel ${styles.projects}`} />
          <Footer />
        </div>
      </main>
    </>
  );
}
